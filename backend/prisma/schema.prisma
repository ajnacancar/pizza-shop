generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id    Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name  String? @db.VarChar(45)
  pizza pizza[]
}

model order_line_item {
  id                Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  product_id        Int?
  quantity          Int?
  unit_price_amount Decimal? @db.Decimal(10, 0)
  total_line_amount Decimal? @db.Decimal(10, 0)
  order_id          Int?
  order             order?   @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "order_id")
  pizza             pizza?   @relation(fields: [product_id], references: [id], onDelete: Cascade, map: "product_id")

  @@index([order_id], map: "order_id_idx")
  @@index([product_id], map: "product_id_idx")
}

model order {
  id                   Int               @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customer_id          Int?
  status               String?           @db.VarChar(45)
  order_date           DateTime?         @db.Date
  price_amount         Decimal?          @db.Decimal(10, 0)
  price_currency       String?           @db.VarChar(5)
  shipping_street      String?           @db.VarChar(45)
  shipping_city        String?           @db.VarChar(45)
  shipping_postal_code String?           @db.VarChar(45)
  shipping_country     String?           @db.VarChar(45)
  special_instructions String?           @db.VarChar(45)
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  order_line_item      order_line_item[]
  user                 user?             @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: "customer_id")

  @@index([customer_id], map: "customer_id")
}

model pizza {
  id              Int               @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name            String?           @db.VarChar(255)
  price           Decimal?          @db.Decimal(10, 0)
  description     String?           @db.VarChar(255)
  ingredients     String?           @db.VarChar(255)
  picture_link    String?           @db.VarChar(255)
  category_id     Int?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  order_line_item order_line_item[]
  category        category?         @relation(fields: [category_id], references: [id], onDelete: Cascade, map: "category_id")
  rating          rating[]

  @@index([category_id], map: "category_id")
}

model rating {
  id       Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  pizza_id Int?
  rating   Float?
  pizza    pizza? @relation(fields: [pizza_id], references: [id], onDelete: Cascade, map: "pizza_id")

  @@index([pizza_id], map: "pizza_id_idx")
}

model user {
  id         Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  first_name String?  @db.VarChar(45)
  last_name  String?  @db.VarChar(45)
  username   String?  @db.VarChar(45)
  email      String?  @unique(map: "email_UNIQUE") @db.VarChar(45)
  password   String?  @db.VarChar(90)
  is_admin   Int?     @db.TinyInt
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  orders     order[]
}
